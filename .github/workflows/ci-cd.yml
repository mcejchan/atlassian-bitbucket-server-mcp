name: CI & Release

# Triggers:
# 1. Push to main (releases)
# 2. Pull‑request targeting main (CI checks)
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_and_release:
    name: Build & Release
    runs-on: ubuntu-latest

    # Permissions for releases, issue comments, PR comments
    permissions:
      contents: write
      issues:   write
      pull-requests: write

    steps:
      # 1 Checkout full history (semantic‑release needs tags)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
          cache: npm

      # 3 Dependencies
      - name: Install dependencies
        run: npm ci

      # 4 Generate code from OpenAPI
      - name: Generate Code
        run: npm run generate

      # 5 Lint
      - name: Lint Check
        run: npm run lint

      # 6 Build
      - name: Build
        run: npm run build

      # 7 Make built file executable
      - name: Set executable permissions
        run: chmod +x dist/index.js

      # 8 Run tests
      - name: Verify tests
        run: npm test

      # --- Release‑only steps (push → main) ---

      # 9 Buildx / QEMU
      - name: Set up QEMU
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/setup-buildx-action@v3

      # 10 Login to **GitHub Container Registry (GHCR)**
      - name: Login to GHCR
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 11 Configure Git (semantic‑release tag + changelog commit)
      - name: Configure Git User
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name  "github-actions[bot]"

      # 12 Semantic‑release dry run – discover next version
      - name: Determine next version (dry run)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: semantic_dry_run
        env:
          GH_TOKEN:  ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          output=$(npx semantic-release --dry-run)
          VERSION=$(echo "$output" | grep -oP 'Published release \K[0-9]+\.[0-9]+\.[0-9]+')
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          echo "$output"

      # 13 Build + push Docker image to GHCR
      - name: Build and push Docker image
        if: steps.semantic_dry_run.outputs.version && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ steps.semantic_dry_run.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
          # optionally add SHA tag:
          #   ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}

      # 14 Semantic‑release final (publish npm, release notes, tag)
      - name: Semantic Release (final)
        id: semantic_final
        if: steps.semantic_dry_run.outputs.version && github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          GH_TOKEN:  ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx semantic-release

      # 15 Fallback when no release created
      - name: No release needed
        if: (!steps.semantic_dry_run.outputs.version) && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: echo "No new version detected – skipping Docker push and final semantic‑release."
